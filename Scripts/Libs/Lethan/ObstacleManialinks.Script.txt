Text CreateScoresTable(){
	return """
		<script><!--

		#Include "TextLib" as TextLib
		#Include "MathLib" as MathLib
		
		declare Buttons = [(Page.GetFirstChild("prev") as CMlQuad), (Page.GetFirstChild("next") as CMlQuad)];

		declare Times = [(Page.GetFirstChild("Times") as CMlFrame)];

		declare Spectators = [(Page.GetFirstChild("Spectators") as CMlFrame)];

		declare SpectatorsCount = [(Page.GetFirstChild("SpectatorsCount") as CMlLabel)];

		declare FramePagination = [(Page.GetFirstChild("FramePagination") as CMlFrame)];

		declare PlayersFrame = [
			(Page.GetFirstChild("player1") as CMlFrame),
			(Page.GetFirstChild("player2") as CMlFrame),
			(Page.GetFirstChild("player3") as CMlFrame),
			(Page.GetFirstChild("player4") as CMlFrame),
			(Page.GetFirstChild("player5") as CMlFrame),
			(Page.GetFirstChild("player6") as CMlFrame),
			(Page.GetFirstChild("player7") as CMlFrame),
			(Page.GetFirstChild("player8") as CMlFrame),
			(Page.GetFirstChild("player9") as CMlFrame),
			(Page.GetFirstChild("player10") as CMlFrame),
			(Page.GetFirstChild("player11") as CMlFrame),
			(Page.GetFirstChild("player12") as CMlFrame),
			(Page.GetFirstChild("player13") as CMlFrame),
			(Page.GetFirstChild("player14") as CMlFrame),
			(Page.GetFirstChild("player15") as CMlFrame),
			(Page.GetFirstChild("player16") as CMlFrame)
		];

		declare PlayersLabels = [
			(Page.GetFirstChild("1") as CMlLabel),
			(Page.GetFirstChild("2") as CMlLabel),
			(Page.GetFirstChild("3") as CMlLabel),
			(Page.GetFirstChild("4") as CMlLabel),
			(Page.GetFirstChild("5") as CMlLabel),
			(Page.GetFirstChild("6") as CMlLabel),
			(Page.GetFirstChild("7") as CMlLabel),
			(Page.GetFirstChild("8") as CMlLabel),
			(Page.GetFirstChild("9") as CMlLabel),
			(Page.GetFirstChild("10") as CMlLabel),
			(Page.GetFirstChild("11") as CMlLabel),
			(Page.GetFirstChild("12") as CMlLabel),
			(Page.GetFirstChild("13") as CMlLabel),
			(Page.GetFirstChild("14") as CMlLabel),
			(Page.GetFirstChild("15") as CMlLabel),
			(Page.GetFirstChild("16") as CMlLabel)
		];

		declare LabelsSpec = [
			(Page.GetFirstChild("spec1") as CMlLabel),
			(Page.GetFirstChild("spec2") as CMlLabel),
			(Page.GetFirstChild("spec3") as CMlLabel),
			(Page.GetFirstChild("spec4") as CMlLabel),
			(Page.GetFirstChild("spec5") as CMlLabel),
			(Page.GetFirstChild("spec6") as CMlLabel),
			(Page.GetFirstChild("spec7") as CMlLabel),
			(Page.GetFirstChild("spec8") as CMlLabel),
			(Page.GetFirstChild("spec9") as CMlLabel),
			(Page.GetFirstChild("spec10") as CMlLabel),
			(Page.GetFirstChild("spec11") as CMlLabel),
			(Page.GetFirstChild("spec12") as CMlLabel),
			(Page.GetFirstChild("spec13") as CMlLabel),
			(Page.GetFirstChild("spec14") as CMlLabel),
			(Page.GetFirstChild("spec15") as CMlLabel),
			(Page.GetFirstChild("spec16") as CMlLabel)
		];

		declare Labels = [
			(Page.GetFirstChild("currentPage") as CMlLabel)
			];

		declare LabelsTime = [
			(Page.GetFirstChild("time1") as CMlLabel),
			(Page.GetFirstChild("time2") as CMlLabel),
			(Page.GetFirstChild("time3") as CMlLabel),
			(Page.GetFirstChild("time4") as CMlLabel),
			(Page.GetFirstChild("time5") as CMlLabel),
			(Page.GetFirstChild("time6") as CMlLabel),
			(Page.GetFirstChild("time7") as CMlLabel),
			(Page.GetFirstChild("time8") as CMlLabel),
			(Page.GetFirstChild("time9") as CMlLabel),
			(Page.GetFirstChild("time10") as CMlLabel),
			(Page.GetFirstChild("time11") as CMlLabel),
			(Page.GetFirstChild("time12") as CMlLabel),
			(Page.GetFirstChild("time13") as CMlLabel),
			(Page.GetFirstChild("time14") as CMlLabel),
			(Page.GetFirstChild("time15") as CMlLabel),
			(Page.GetFirstChild("time16") as CMlLabel)
			];

		declare LabelsCP = [
			(Page.GetFirstChild("cp1") as CMlLabel),
			(Page.GetFirstChild("cp2") as CMlLabel),
			(Page.GetFirstChild("cp3") as CMlLabel),
			(Page.GetFirstChild("cp4") as CMlLabel),
			(Page.GetFirstChild("cp5") as CMlLabel),
			(Page.GetFirstChild("cp6") as CMlLabel),
			(Page.GetFirstChild("cp7") as CMlLabel),
			(Page.GetFirstChild("cp8") as CMlLabel),
			(Page.GetFirstChild("cp9") as CMlLabel),
			(Page.GetFirstChild("cp10") as CMlLabel),
			(Page.GetFirstChild("cp11") as CMlLabel),
			(Page.GetFirstChild("cp12") as CMlLabel),
			(Page.GetFirstChild("cp13") as CMlLabel),
			(Page.GetFirstChild("cp14") as CMlLabel),
			(Page.GetFirstChild("cp15") as CMlLabel),
			(Page.GetFirstChild("cp16") as CMlLabel)
			];

		declare LabelsRespawns = [
			(Page.GetFirstChild("respawns1") as CMlLabel),
			(Page.GetFirstChild("respawns2") as CMlLabel),
			(Page.GetFirstChild("respawns3") as CMlLabel),
			(Page.GetFirstChild("respawns4") as CMlLabel),
			(Page.GetFirstChild("respawns5") as CMlLabel),
			(Page.GetFirstChild("respawns6") as CMlLabel),
			(Page.GetFirstChild("respawns7") as CMlLabel),
			(Page.GetFirstChild("respawns8") as CMlLabel),
			(Page.GetFirstChild("respawns9") as CMlLabel),
			(Page.GetFirstChild("respawns10") as CMlLabel),
			(Page.GetFirstChild("respawns11") as CMlLabel),
			(Page.GetFirstChild("respawns12") as CMlLabel),
			(Page.GetFirstChild("respawns13") as CMlLabel),
			(Page.GetFirstChild("respawns14") as CMlLabel),
			(Page.GetFirstChild("respawns15") as CMlLabel),
			(Page.GetFirstChild("respawns16") as CMlLabel)
			];


		declare netread Text[] Net_PlayersTimeData for Teams[0];
		declare netread Integer Net_PlayersCount for Teams[0];
		
		declare netread Boolean Net_TrueSpectate for UI;
		declare netwrite Text Net_PlayerSpectateForced for UI;

		declare netwrite currentPage for UI = 0;
		
		declare netread Integer Net_SpecCount for UI;

		declare LastUpdate = 0;

		
		currentPage = 0;

		while(True){
			yield;
			SpectatorsCount[0].Value = TextLib::ToText(Net_SpecCount);
			if(Players.count > 16){
				FramePagination[0].Visible = True;
			} else {
				FramePagination[0].Visible = False;
			}

			Labels[0].Value = TextLib::ToText(currentPage + 1) ^ "/" ^ TextLib::ToText(MathLib::CeilingInteger(Players.count/16.0));

			declare index = 0;
			declare maxCount = 16;
			while(index < maxCount){
				declare key = currentPage * 16 + index;
				if(Net_PlayersTimeData.existskey(key)){
					declare data = TextLib::Split("|", Net_PlayersTimeData[key]);
					PlayersFrame[index].Visible = True;
					foreach(Player, Players){
						if(Player.Login == data[0]){
							PlayersLabels[index].Value = (currentPage * 16 + (index + 1)) ^ " - " ^ Player.Name;
							continue;
						}
					}
					if(TextLib::ToInteger(data[1]) != -1){
						LabelsTime[index].Value = TextLib::TimeToText(TextLib::ToInteger(data[1]), True);
					} else {
						LabelsTime[index].Value = "-";
					}
					LabelsCP[index].Value = "CP " ^ data[2];

					LabelsRespawns[index].Value = "RS " ^ data[3];
				} else {
					PlayersFrame[index].Visible = False;
				}
				index += 1;
			}

			foreach (Event in PendingEvents) {
				switch(Event.Type){
					case CMlEvent::Type::MouseClick:{
						if(Event.ControlId == "prev"){
							if(currentPage > 0){
								currentPage -= 1;
							}
						}
						if(Event.ControlId == "next"){
							if(currentPage < MathLib::CeilingInteger(Players.count/16.0) - 1){
								currentPage += 1;
							}
						}

						declare index = 0;

						while(index < 16){
							if(Event.ControlId == LabelsSpec[index].ControlId){
								if(Net_PlayersTimeData.existskey(currentPage * 16 + index)){
									declare data = TextLib::Split("|", Net_PlayersTimeData[currentPage * 16 + index])[0];
									
									Net_PlayerSpectateForced = data;
								}
							}
							index += 1;
						}
					}
				}
			}
		}
		--></script>
		<frame id="Spectators" posn="0 12 0">
			<quad posn="148 -68 0" sizen="6 5.33" bgcolor="FFFA" style="Icons64x64_1" substyle="Camera"/>
			<quad  posn="146 -62 -1" sizen="18 16" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange2Bg"/>
			<label id="SpectatorsCount" posn="159 -71 0" sizen="7 5" text="N/A" textsize="1" valign="center2" halign="right"/>
		</frame>
		<frame id="Times" posn="0 8 0">
			<quad posn="-87 40 -1" sizen="175 108" bgcolor="000F" style="EnergyBar" substyle="EnergyBar" opacity="0.8"/>
			<quad posn="25 -53 0" sizen="68 26" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange2Bg" opacity="0.8"/>
			<quad posn="-92 58 1" sizen="100 33" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange1Bg" opacity="0.8"/>
			
			<label posn="-87 43 1" sizen="85 3" text="{{{MapName}}} by {{{Map.AuthorNickName}}} ({{{Map.AuthorLogin}}})" textsize="1" valign="center"/>
			<label posn="-1 37 1" sizen="84 4" text="{{{ServerName}}}" textsize="1" valign="center2" halign="right"/>
			
			<frame posn="0 5 1">
				<quad posn="0 -20.5 0.5" sizen="162 85" bgcolor="1F1F1FFF" halign="center" valign="center" style="Bgs1" substyle="BgButtonGlow"/>
				<frame id="player1" posn="-10.5 25 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8"/>
					<label id="1" posn="-61 -10 0" sizen="41 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec1"/>
					<label id="time1" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp1" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns1" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player2" posn="-10.5 15 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="2" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec2"/>
					<label id="time2" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp2" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns2" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player3" posn="-10.5 5 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="3" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec3"/>
					<label id="time3" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp3" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns3" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player4" posn="-10.5 -5 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="4" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec4"/>
					<label id="time4" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp4" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns4" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player5" posn="-10.5 -15 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="5" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec5"/>
					<label id="time5" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp5" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns5" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player6" posn="-10.5 -25 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="6" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec6"/>
					<label id="time6" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp6" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns6" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player7" posn="-10.5 -35 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="7" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec7"/>
					<label id="time7" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp7" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns7" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player8" posn="-10.5 -45 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="8" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec8"/>
					<label id="time8" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp8" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns8" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player9" posn="68 25 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="9" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec9"/>
					<label id="time9" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp9" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns9" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>
				
				<frame id="player10" posn="68 15 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="10" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec10"/>
					<label id="time10" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp10" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns10" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player11" posn="68 5 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="11" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec11"/>
					<label id="time11" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp11" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns11" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player12" posn="68 -5 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="12" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec12"/>
					<label id="time12" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp12" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns12" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player13" posn="68 -15 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="13" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec13"/>
					<label id="time13" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp13" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns13" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player14" posn="68 -25 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="14" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec14"/>
					<label id="time14" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp14" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns14" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player15" posn="68 -35 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="15" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec15"/>
					<label id="time15" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp15" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns15" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>

				<frame id="player16" posn="68 -45 1">
					<quad posn="-68 -10 0" sizen="79 10" bgcolor="003366C6" halign="left" valign="center"  style="UiSMSpectatorScoreBig" substyle="PlayerSlotSmallRev" opacity="0.8" />
					<label id="16" posn="-61 -10 0" sizen="70 5" text="No player" valign="center" halign="left" textsize="2"/>
					<quad posn="-67 -7 1" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Camera" scriptevents="1" id="spec16"/>
					<label id="time16" posn="2 -8.5 0" sizen="20 6" text="00:00.00" style="TextCardMedium" textsize="2" halign="center"/>
					<label posn="-12 -8 1" sizen="13 5" text="0" id="cp16" style="TextCardSmall" textsize="1" halign="center" valign="center"/>
					<label posn="-12 -12 1" sizen="13 5" text="0" id="respawns16" style="TextCardSmall" textsize="1" halign="center" valign="center2"/>
				</frame>
				<frame id="FramePagination">
					<quad id="next" posn="80 -70 1" sizen="6 6" bgcolor="FFFA" style="Icons64x64_1" substyle="ArrowNext" scriptevents="1"/>
					<quad id="prev" posn="54 -70 1" sizen="6 6" bgcolor="FFFA" style="Icons64x64_1" substyle="ArrowPrev" scriptevents="1"/>
					<label id="currentPage" posn="70 -73 1" sizen="20 5" text="[currentPage]" valign="center2" halign="center" textsize="2"/>
				</frame>
			</frame>
		</frame>
		""";
}

Text CreatePlayerInterface(){
	return """
	<script><!--
	#Include "TextLib" as TextLib
	#Include "MathLib" as MathLib

	Text Ordinal(Integer Value) {
		declare Text valueReturned;
    	declare mod100 = Value % 100;
	    declare mod10 = Value % 10;

		if(mod10 == 1 && mod100 != 11) {
			valueReturned = Value ^ "st";
		} else if(mod10 == 2 && mod100 != 12) {
			valueReturned = Value ^ "nd";
		} else if(mod10 == 3 && mod100 != 13) {
			valueReturned = Value ^ "rd";
		} else {
			valueReturned = Value ^ "th";
		}

		return valueReturned;
 	}

	Vec3 Lerp(Vec3 _Origin, Vec3 _Destination, Real _Smooth){
		declare Real x;
		declare Real y;
		declare Real z;

		x = _Origin.X;
		y = _Origin.Y;
		z = _Origin.Z;

		declare Real xDes;
		declare Real yDes;
		declare Real zDes;

		xDes = _Destination.X;
		yDes = _Destination.Y;
		zDes = _Destination.Z;

		declare xDiff = MathLib::Abs(xDes - x) / _Smooth;
		declare yDiff = MathLib::Abs(yDes - y) / _Smooth;
		declare zDiff = MathLib::Abs(zDes - z) / _Smooth;

		if(x < xDes){
			if(xDiff > 0.01){
				x += xDiff;
			} else {
				x = xDes;
			}
		}
		if(x > xDes){
			if(xDiff > 0.01){
				x -= xDiff;
			} else {
				x = xDes;
			}
		}

		if(y < yDes){
			if(yDiff > 0.01){
				y += yDiff;
			} else {
				y = yDes;
			}
		}
		if(y > yDes){
			if(yDiff > 0.01){
				y -= yDiff;
			} else {
				y = yDes;
			}
		}

		if(z < zDes){
			if(zDiff > 0.01){
				z += zDiff;
			} else {
				z = zDes;
			}
		}
		if(z > zDes){
			if(zDiff > 0.01){
				z -= zDiff;
			} else {
				z = zDes;
			}
		}

		return <x, y, z>;
	}

	Ident GetPlayerId(Text _Login){
		declare Ident valueReturned;
		foreach (Player in Players) {
			if (Player.Login == _Login) {
				valueReturned = Player.Id;
				break;
			}
		}
		return valueReturned;
	}

	main(){
		
		declare CheckpointLeaderboard = [
			(Page.GetFirstChild("CheckpointLeaderboard") as CMlFrame)
		];

		declare CPRanks = [
			(Page.GetFirstChild("cpRank1") as CMlLabel),
			(Page.GetFirstChild("cpRank2") as CMlLabel),
			(Page.GetFirstChild("cpRank3") as CMlLabel),
			(Page.GetFirstChild("cpRank4") as CMlLabel),
			(Page.GetFirstChild("cpRank5") as CMlLabel),
			(Page.GetFirstChild("cpRankPlayer") as CMlLabel),
			(Page.GetFirstChild("cpRankLabel") as CMlLabel)
		];

		declare InfiniteQuad = [
			(Page.GetFirstChild("InfiniteTime") as CMlQuad)
		];
		declare RestartButtonEdit = [
			(Page.GetFirstChild("RestartButtonEdit") as CMlLabel)
		];

		declare FrameHelp = [
			(Page.GetFirstChild("Menu") as CMlFrame)
		];

		declare HelpIcon = [
			(Page.GetFirstChild("ShowHelp") as CMlQuad)
		];

		declare LabelNextMap = [
			(Page.GetFirstChild("NextMap") as CMlLabel)
		];

		declare TimeRemainingLabel = [
			(Page.GetFirstChild("TimeRemaining") as CMlLabel)
		];

		declare Frames = [
			(Page.GetFirstChild("GlobalTimer") as CMlFrame),
			(Page.GetFirstChild("Corner") as CMlFrame)
		];

		declare Sliders = [
			(Page.GetFirstChild("SliderLeft") as CMlQuad),
			(Page.GetFirstChild("SliderRight") as CMlQuad)
		];

		declare PlayerInterfaces = [
			(Page.GetFirstChild("Running") as CMlFrame),
			(Page.GetFirstChild("RaceTerminated") as CMlFrame)
		];

		declare CPProgress = [
			(Page.GetFirstChild("CPProgress") as CMlLabel)
		];

		declare AmmoInfo = [
			(Page.GetFirstChild("AmmoInfo") as CMlLabel)
		];

		declare StaminaInfo = [
			(Page.GetFirstChild("StaminaInfo") as CMlLabel)
		];

		declare GaugeAmmo = [
			(Page.GetFirstChild("PlayerAmmo") as CMlGauge)
		];

		declare GaugeStamina = [
			(Page.GetFirstChild("PlayerStamina") as CMlGauge)
		];

		declare PlayerTimer = [
			(Page.GetFirstChild("PlayerTimer") as CMlLabel)
		];

		declare PlayerBestTime = [
			(Page.GetFirstChild("PlayerBestTime") as CMlLabel)
		];

		declare PlayerRunsAndRespawns = [
			(Page.GetFirstChild("PlayerRunsAndRespawns") as CMlLabel)
		];

		declare RaceTerminated = [
			(Page.GetFirstChild("Shots") as CMlLabel),
			(Page.GetFirstChild("MaxSpeed") as CMlLabel),
			(Page.GetFirstChild("StaminaUsed") as CMlLabel),
			(Page.GetFirstChild("Place") as CMlLabel)
		];

		declare Theoricals = [
			(Page.GetFirstChild("Theorical") as CMlLabel),
			(Page.GetFirstChild("BestTheorical") as CMlLabel)
		];

		declare SpectatorMode = [
			(Page.GetFirstChild("SpectatorMode") as CMlFrame),
			(Page.GetFirstChild("SpectatorForced") as CMlFrame)
		];

		declare Regen = [
			(Page.GetFirstChild("NoRegenAmmo") as CMlFrame),
			(Page.GetFirstChild("NoRegenStamina") as CMlFrame)
		];

		declare LastUpdate = 0;
		declare LastCheckpoint = 0;
		declare LastCheckpointUpdate = 0;

		declare netread Integer Net_PlayerStartTime for UI;
		declare netread Integer Net_PlayerCPTime for UI;
		declare netread Boolean Net_RaceStarted for UI;
		declare netread Boolean Net_HasAmmo for UI;
		declare netread Boolean Net_AmmoUnlimited for UI;
		declare netread Boolean Net_AmmoRegen for UI;
		declare netread Boolean Net_StaminaUnlimited for UI;
		declare netread Boolean Net_StaminaRegen for UI;
		declare netread Boolean Net_RespawnAtStart for UI;
		declare netread Integer Net_BestTime for UI;
		declare netread Integer Net_Runs for UI;
		declare netread Integer Net_Finishs for UI;
		declare netread Integer Net_Respawns for UI;
		declare netread Integer Net_ShotsFired for UI;
		declare netread Integer Net_StaminaUsed for UI;
		declare netread Integer Net_CheckpointProgress for UI;
		declare netread Real Net_MaxSpeed for UI;
		declare netread Integer Net_Place for UI;
		declare netread Integer Net_Theoretical for UI;

		declare netread Integer Net_BestTheoretical for Teams[0];
		declare netread Integer Net_CheckpointsCount for Teams[0];
		declare netread Boolean Net_NextMap for Teams[0];

		declare netread Boolean Net_TrueSpectate for UI;

		declare netwrite Text Net_PlayerSpectate for UI;
		declare netwrite Text Net_PlayerSpectateForced for UI;

		declare netread Integer Net_TimeRemaining for Teams[0];
		declare netread Boolean Net_FreeTime for Teams[0];
		declare netread Integer ForceNextCount for Teams[0];
		declare netread Integer Net_PlayersCount for Teams[0];

		declare netread Integer[Text] Net_CheckLeaderBoard for Teams[0];

		declare Boolean ShowHelpMenu for UI;
		declare netwrite CustomKeyEdit for UI = False;
		declare CustomKey for UI = "Delete";

		declare Integer LastBestTime;
		declare Integer LastFinishs;
		declare Real YPosRunning;
		declare Real YPosEnded;

		declare YPosRunningIn = -15.0;
		declare YPosRunningOut = -2.0;
		declare YPosRunningObj = YPosRunningOut;

		declare YPosEndedIn = -20.0;
		declare YPosEndedOut = 0.0;
		declare YPosEndedObj = YPosEndedIn;

		declare Smooth = 5.0;

		declare StaminaAnim = False;
		declare StaminaAnimValue = 0.0;

		declare AmmoAnim = False;
		declare AmmoAnimValue = 0.0;

		declare CSmPlayer LocalPlayer;

		LastBestTime = Net_BestTime;
		LastFinishs = Net_Finishs;

		ShowHelpMenu = False;

		Net_PlayerSpectate = "";
		Net_PlayerSpectateForced = "";

		while(True){
			yield;

			if(GUIPlayer != Null){
				//CP Ranking
				if(Net_CheckpointProgress != LastCheckpoint && Net_RaceStarted){
					if(Net_CheckpointProgress > 0 && Net_CheckpointProgress < Net_CheckpointsCount){
						LastCheckpointUpdate = Now;	
					}
					LastCheckpoint = Net_CheckpointProgress;
					declare Text[] CPRanking;

					CPRanking.clear();

					foreach(CheckpointTime, Net_CheckLeaderBoard){
						declare key = Net_CheckLeaderBoard.keyof(CheckpointTime);

						if(TextLib::Split("|", key)[1] == TextLib::ToText(LastCheckpoint)){
							CPRanking.add(TextLib::TimeToText(CheckpointTime, True) ^ "|" ^ TextLib::Split("|", key)[0]);
						}
					}

					CPRanking = CPRanking.sort();

					declare indexAll = 0;
					declare indexPlayer = 0;

					if(CPRanking.count > 0){
						while(indexAll < CPRanking.count){
							if(LocalPlayer != Null){
								if(LocalPlayer.Login == TextLib::Split("|", CPRanking[0])[1]){
									indexPlayer = indexAll;
									declare time = Net_PlayerCPTime;
									CPRanks[5].Value = GUIPlayer.Name ^ "$z - " ^ TextLib::TimeToText(time, True);							
								}
							}
							indexAll += 1;
						}
					}
					
					declare index = 0;

					while(index < 5){
						if(CPRanking.existskey(index)){
							CPRanks[index].Visible = True;
							foreach(Player, Players){
								if(Player.Login == TextLib::Split("|", CPRanking[index])[1]){
									CPRanks[index].Value = Player.Name ^ "$z - " ^ TextLib::Split("|", CPRanking[index])[0];
									continue;
								}
							}
						} else {
							CPRanks[index].Visible = False;
						}
						index += 1;
					}

					CPRanks[6].Value = "Checkpoint " ^ Net_CheckpointProgress ^ " Ranking (Top 5)";
				}
			}

			if(LastCheckpointUpdate + 5000 < Now){
				CheckpointLeaderboard[0].RelativePosition = Lerp(CheckpointLeaderboard[0].RelativePosition, <-50.0, 0.0, 0.0>, Smooth);	
			} else {
				CheckpointLeaderboard[0].RelativePosition = Lerp(CheckpointLeaderboard[0].RelativePosition, <0.0, 0.0, 0.0>, Smooth);
			}

			//Vote next map
			LabelNextMap[0].Value = "Press F3 for next map (" ^ ForceNextCount ^ "/" ^ Net_PlayersCount ^ ")";
			if(!Net_FreeTime || ForceNextCount == Net_PlayersCount){
				if(Net_TimeRemaining > 3600000){
					if(Net_TimeRemaining - (Net_TimeRemaining / 3600000) < 600000){
						TimeRemainingLabel[0].Value = TextLib::ToText(Net_TimeRemaining / 3600000) ^ ":0" ^ TextLib::TimeToText(Net_TimeRemaining, False);
					} else {
						TimeRemainingLabel[0].Value = TextLib::ToText(Net_TimeRemaining / 3600000) ^ ":" ^ TextLib::TimeToText(Net_TimeRemaining, False);
					}
				} else {
					TimeRemainingLabel[0].Value = TextLib::TimeToText(Net_TimeRemaining, False);
				}
				if(Net_TimeRemaining > 60000){
					TimeRemainingLabel[0].TextColor = <1.0, 1.0, 1.0>;
				} else {
					if(Net_TimeRemaining > 20000){
						TimeRemainingLabel[0].TextColor = <1.0, 0.4, 0.0>;
					} else {
						TimeRemainingLabel[0].TextColor = <1.0, 0.0, 0.0>;
					}
				}
				InfiniteQuad[0].Visible = False;
			} else {
				InfiniteQuad[0].Visible = True;
				TimeRemainingLabel[0].Value = "";
			}
			
			//Sliders
			if(Net_NextMap){
				Sliders[0].RelativePosition = Lerp(Sliders[0].RelativePosition, <0.0, 0.0, -5.0>, Smooth*10);
				Sliders[1].RelativePosition = Lerp(Sliders[1].RelativePosition, <0.0, 0.0, -5.0>, Smooth*10);
				Frames[0].RelativePosition = Lerp(Frames[0].RelativePosition, <-20.0, 0.0, 0.0>, Smooth*2);			
			} else {
				Sliders[0].RelativePosition = Lerp(Sliders[0].RelativePosition, <-200.0, 0.0, -5.0>, Smooth*10);
				Sliders[1].RelativePosition = Lerp(Sliders[1].RelativePosition, <200.0, 0.0, -5.0>, Smooth*10);
				Frames[0].RelativePosition = Lerp(Frames[0].RelativePosition, <0.0, 0.0, 0.0>, Smooth*2);
			}


			if (LastUpdate + 25 < Now) {
				LastUpdate = Now;
				if(InputPlayer != Null){
					LocalPlayer <=> InputPlayer;
					Net_PlayerSpectate = "";
					if(GUIPlayer != Null){
						if(GUIPlayer != LocalPlayer){
							LocalPlayer <=> GUIPlayer;
							Net_PlayerSpectate = GUIPlayer.Login;
						}
					}

					if(IsSpectatorMode){
						SpectatorMode[0].RelativePosition = Lerp(SpectatorMode[0].RelativePosition, <0.0, -15.0, 0.0>, Smooth);
						if(Net_TrueSpectate && Net_PlayerSpectateForced != ""){
							SpectatorMode[1].RelativePosition = Lerp(SpectatorMode[1].RelativePosition, <0.0, -20.0, 0.0>, Smooth);
						} else {
							SpectatorMode[1].RelativePosition = Lerp(SpectatorMode[1].RelativePosition, <30.0, -20.0, 0.0>, Smooth);
						}
					} else {
						SpectatorMode[0].RelativePosition = Lerp(SpectatorMode[0].RelativePosition, <40.0, -15.0, 0.0>, Smooth);
						SpectatorMode[1].RelativePosition = Lerp(SpectatorMode[1].RelativePosition, <30.0, -20.0, 0.0>, Smooth);
					}
					if(Net_RaceStarted){
						YPosRunningObj = YPosRunningOut;
						YPosEndedObj = YPosEndedIn;
						if(Net_HasAmmo){
							GaugeAmmo[0].Visible = True;
							if(Net_AmmoUnlimited){
								GaugeAmmo[0].Ratio = 1.0;
								GaugeAmmo[0].GradingRatio = 0.25;
								GaugeAmmo[0].Color = <LocalPlayer.User.Color.X * AmmoAnimValue, LocalPlayer.User.Color.Y * AmmoAnimValue, LocalPlayer.User.Color.Z * AmmoAnimValue>;
								if(AmmoAnim){
									if(AmmoAnimValue < 1.0){
										AmmoAnimValue += 0.2;
									} else {
										AmmoAnim = False;
									}
								}
								if(!AmmoAnim){
									if(AmmoAnimValue > 0.2){
										AmmoAnimValue -= 0.2;
									} else {
										AmmoAnim = True;
									}
								}
								AmmoInfo[0].Visible = True;
							} else {
								GaugeAmmo[0].Color = <1.0, 1.0, 1.0>;
								if(LocalPlayer.CurAmmoMax != 0){
									GaugeAmmo[0].Ratio = (LocalPlayer.CurAmmo * 1.0) / (LocalPlayer.CurAmmoMax * 1.0);
									GaugeAmmo[0].GradingRatio = 1 / (LocalPlayer.CurAmmoMax / 1600.0);
									if(Net_AmmoRegen){
										Regen[0].RelativePosition = Lerp(Regen[0].RelativePosition, <0.0, -10.0 , -5.0>, Smooth);
									} else {
										Regen[0].RelativePosition = Lerp(Regen[0].RelativePosition, <0.0, 0.0 , -5.0>, Smooth);
									}
									GaugeAmmo[0].Color = <LocalPlayer.User.Color.X * ((LocalPlayer.CurAmmo * 1.0) / (LocalPlayer.CurAmmoMax * 1.0)), LocalPlayer.User.Color.Y * ((LocalPlayer.CurAmmo * 1.0) / (LocalPlayer.CurAmmoMax * 1.0)), LocalPlayer.User.Color.Z * ((LocalPlayer.CurAmmo * 1.0) / (LocalPlayer.CurAmmoMax * 1.0))>;
								}
								AmmoInfo[0].Visible = False;
							}						
						} else {
							GaugeAmmo[0].Visible = False;
							GaugeAmmo[0].Ratio = 0.0;
							GaugeAmmo[0].GradingRatio = 1.0;
						}
						
						GaugeStamina[0].Ratio = LocalPlayer.Stamina / 3600.0;
						if(Net_StaminaUnlimited){
							GaugeStamina[0].Color = <LocalPlayer.User.Color.X * StaminaAnimValue, LocalPlayer.User.Color.Y * StaminaAnimValue, LocalPlayer.User.Color.Z * StaminaAnimValue>;
							GaugeStamina[0].Ratio = 1.0;
							if(StaminaAnim){
								if(StaminaAnimValue < 1.0){
									StaminaAnimValue += 0.2;
								} else {
									StaminaAnim = False;
								}
							}
							if(!StaminaAnim){
								if(StaminaAnimValue > 0.2){
									StaminaAnimValue -= 0.2;
								} else {
									StaminaAnim = True;
								}
							}
							StaminaInfo[0].Visible = True;
						} else {
							GaugeStamina[0].Color = <LocalPlayer.User.Color.X *(LocalPlayer.Stamina / 3600.0), LocalPlayer.User.Color.Y * (LocalPlayer.Stamina / 3600.0), LocalPlayer.User.Color.Z * (LocalPlayer.Stamina / 3600.0)>;									
							if(Net_StaminaRegen){
								Regen[1].RelativePosition = Lerp(Regen[1].RelativePosition, <0.0, -10.0 , -5.0>, Smooth);
							} else {
								Regen[1].RelativePosition = Lerp(Regen[1].RelativePosition, <0.0, 0.0 , -5.0>, Smooth);
							}
							StaminaInfo[0].Visible = False;
						}
						PlayerTimer[0].Value = TextLib::TimeToText(ArenaNow - Net_PlayerStartTime, True);
					} else {
						YPosRunningObj = YPosRunningIn;
						if(Net_Finishs != LastFinishs){
							YPosEndedObj = YPosEndedOut;
							LastFinishs = Net_Finishs;
						}

						GaugeAmmo[0].Color = <1.0, 1.0, 1.0>;
						GaugeStamina[0].Color = <1.0, 1.0, 1.0>;
						GaugeAmmo[0].Ratio = 0.0;
						GaugeStamina[0].Ratio = 0.0;
						PlayerTimer[0].Value = "--:--,--";

						RaceTerminated[0].Value = "Shots fired : " ^ Net_ShotsFired;
						RaceTerminated[1].Value = "Max speed : " ^ Net_MaxSpeed;
						RaceTerminated[2].Value = "Stamina consumed : " ^ Net_StaminaUsed;
						RaceTerminated[3].Value = Ordinal(Net_Place);
					}	
					
					CPProgress[0].Value = Net_CheckpointProgress ^ "/" ^ Net_CheckpointsCount;
					
					if(Net_NextMap || (GUIPlayer == Null && IsSpectatorMode)){
						PlayerInterfaces[0].RelativePosition = Lerp(PlayerInterfaces[0].RelativePosition, <0.0, YPosRunningIn, 0.0>, Smooth/2);
						PlayerInterfaces[1].RelativePosition = Lerp(PlayerInterfaces[1].RelativePosition, <0.0, YPosEndedIn, -1.0>, Smooth/2);
						
						Frames[1].RelativePosition = Lerp(Frames[1].RelativePosition, <80.0, 0.0, 0.0>, Smooth*2);
					} else {
						PlayerInterfaces[0].RelativePosition = Lerp(PlayerInterfaces[0].RelativePosition, <0.0, YPosRunningObj, 0.0>, Smooth);
						PlayerInterfaces[1].RelativePosition = Lerp(PlayerInterfaces[1].RelativePosition, <0.0, YPosEndedObj, -1.0>, Smooth);
						
						Frames[1].RelativePosition = Lerp(Frames[1].RelativePosition, <0.0, 0.0, 0.0>, Smooth*2);
					}

					Theoricals[0].Value = "Theo. : " ^ TextLib::TimeToText(Net_Theoretical, True);
					Theoricals[0].TextColor = LocalPlayer.User.Color;
					Theoricals[1].Value = "All Theo. : " ^ TextLib::TimeToText(Net_BestTheoretical, True);
					Theoricals[1].TextColor = LocalPlayer.User.Color;

					CPProgress[0].TextColor = LocalPlayer.User.Color;

					if(Net_BestTime == -1){
						PlayerBestTime[0].Value = "Best : -";
					} else {
						PlayerBestTime[0].Value = "Best : " ^ TextLib::TimeToText(Net_BestTime, True);
						if(LastBestTime != Net_BestTime){
							LastBestTime = Net_BestTime;
							PlayerBestTime[0].TextSize = 6;
						}
						if(PlayerBestTime[0].TextSize > 2){
							PlayerBestTime[0].TextSize -= 1;
						}
					}

					PlayerRunsAndRespawns[0].TextColor = LocalPlayer.User.Color;
					if(!Net_RespawnAtStart){
						PlayerRunsAndRespawns[0].Value = "Finishs : " ^ TextLib::ToText(Net_Finishs) ^ " RS : " ^ TextLib::ToText(Net_Respawns);
					} else {
						PlayerRunsAndRespawns[0].Value = "Finishs : " ^ TextLib::ToText(Net_Finishs) ^ " $s$f00No Respawns";
					}
					if(CustomKeyEdit){
						RestartButtonEdit[0].Value = "Press new key";
					} else {
						RestartButtonEdit[0].Value = "Restart : " ^ CustomKey;
					}
					if(ShowHelpMenu){
						HelpIcon[0].RelativePosition = Lerp(HelpIcon[0].RelativePosition, <-180.0, 83.0, 0.0>, Smooth);
						FrameHelp[0].RelativePosition = Lerp(FrameHelp[0].RelativePosition, <0.0, 15.0, 0.0>, Smooth);
					} else {
						HelpIcon[0].RelativePosition = Lerp(HelpIcon[0].RelativePosition, <-158.0, 83.0, 0.0>, Smooth);
						FrameHelp[0].RelativePosition = Lerp(FrameHelp[0].RelativePosition, <-100.0, 15.0, 0.0>, Smooth);
					}
				} else {
					GaugeAmmo[0].Visible = False;
					GaugeStamina[0].Visible = False;
					PlayerTimer[0].Value = "--:--,--";
				}
			}

			foreach (Event in PendingEvents) {
				switch(Event.Type){
					case CMlEvent::Type::MouseClick:{
						if(Event.ControlId == "QuitSpectatorMode"){
							if(Net_TrueSpectate) IsSpectatorMode = False;
							Net_PlayerSpectateForced = "";
						}
						if(Event.ControlId == "QuitSpectatorForcedMode"){
							if(Net_TrueSpectate){
								Net_PlayerSpectateForced = "";
							}
						}
						if(Event.ControlId == "ShowHelp"){
							ShowHelpMenu = True;
						}
						if(Event.ControlId == "CloseHelp"){
							ShowHelpMenu = False;
						}
						if(Event.ControlId == "RestartButtonEdit"){
							CustomKeyEdit = True;
						}
					}
					case CMlEvent::Type::KeyPress: {
						if(CustomKeyEdit){
							CustomKeyEdit = False;
							CustomKey = Event.KeyName;
						}
					}
				}
			}
		}
	}
	--></script>
	<frame id="PlayerInterface" posn="0 0 0">
		<quad id="SliderLeft" posn="0 0 -2" sizen="1000 1000" bgcolor="000F" rot="20" valign="center" halign="right" hidden="0"/>
		<quad id="SliderRight" posn="0 0 -2" sizen="1000 1000" bgcolor="000F" rot="20" valign="center" halign="left" hidden="0"/>
		<quad id="ShowHelp" posn="-158 83 0" sizen="6 6" bgcolor="FFFA" style="UIConstruction_Buttons" substyle="Help" scriptevents="1"/>
		<frame id="Menu" posn="-100 15 0">
			<quad posn="-164 70 0" sizen="94 41" bgcolor="FFFA" style="Bgs1" substyle="BgCardList"/>
			<label posn="-72 68 0" sizen="55 5" text="Help / Options" halign="right"/>
			<label id="CloseHelp" posn="-162 42 1" sizen="13 5" text="Close" style="CardMain_Quit" scriptevents="1"/>
			<label posn="-157 58 0" sizen="81 4" text="Press F3 to vote for next map." textsize="2"/>
			<label posn="-157 54 0" sizen="81 4" text="Press F4 to (de)activate respawn at last CP." textsize="2"/>
			<label posn="-157 48 0" sizen="49 5" text="Bind key for restart" textsize="2"/>
			<label id="RestartButtonEdit" posn="-101 49 1" sizen="20 5" text="Restart : DELETE" style="CardButtonSmallS" scriptevents="1"/>
		</frame>
		<frame id="CheckpointLeaderboard" posn="-50 0 0">
			<quad posn="-166 46 0" sizen="48 10" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange1Bg"/>
			<quad posn="-162 39 -1" sizen="43 30" bgcolor="FFFA" style="Bgs1" substyle="BgCardList"/>
			<label id="cpRankLabel" posn="-123 41 0" sizen="36 5" text="CP Ranking" textsize="1.5" valign="center" halign="right"/>
			<label id="cpRank1" posn="-159 37 0" sizen="37 4" text="Player - 00:00.00" textsize="2"/>
			<label id="cpRank2" posn="-159 33 0" sizen="37 4" text="Player - 00:00.00" textsize="2"/>
			<label id="cpRank3" posn="-159 29 0" sizen="37 4" text="Player - 00:00.00" textsize="2"/>
			<label id="cpRank4" posn="-159 25 0" sizen="37 4" text="Player - 00:00.00" textsize="2"/>
			<label id="cpRank5" posn="-159 21 0" sizen="37 4" text="Player - 00:00.00" textsize="2"/>
			<label id="cpRankPlayer" posn="-159 14 0" sizen="37 4" text="Player - 00:00.00" textsize="2"/>
		</frame>
		<frame id="GlobalTimer" posn="-20 0 0">
			<quad posn="-166 99 0" sizen="23 20" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange1Bg"/>
			<label id="TimeRemaining" posn="-153 87 0" sizen="14 5" text="FREE TIME" textsize="2" style="TextRaceChrono" valign="center" halign="center"/>
			<quad id="InfiniteTime" posn="-157 89 1" sizen="8 4" bgcolor="FFFA" image="https://dl.dropboxusercontent.com/u/42719494/Maniaplanet/infinite.png"/>
		</frame>
		<frame id="NextMapCall">
			<quad posn="-126 94 0" sizen="53 8" bgcolor="FFFA" style="Bgs1" substyle="BgCardList"/>
			<label id="NextMap" posn="-100 88.5 0" sizen="42 3" text="F3 for next map (0/0)" textsize="1" halign="center" valign="center"/>
		</frame>
		<frame id="SpectatorMode" posn="40 -15 0">
			<quad posn="127 -42 0" sizen="36 16" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange2Bg"/>
			<quad id="QuitSpectatorMode" posn="131 -49 1" sizen="4 4" bgcolor="FFFA" style="Icons128x32_1" substyle="Close" scriptevents="1"/>
			<label posn="137 -51 1" sizen="21 5" text="Spectator Mode" textsize="1" valign="center2"/>
		</frame>
		<frame id="SpectatorForced" posn="30 -20 -1">
			<quad posn="141 -45 0" sizen="21 13" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange1Bg"/>
			<quad id="QuitSpectatorForcedMode" posn="143 -50 1" sizen="4 4" bgcolor="FFFA" style="Icons128x32_1" substyle="Close" scriptevents="1"/>
			<label posn="157 -52 1" sizen="11 5" text="$f00Forced" textsize="1" valign="center2" halign="right"/>
		</frame>
		<frame id="SpectatorInput" hidden="1">
			<quad posn="-30 -68 -2" sizen="60 20" bgcolor="FFFA" style="Bgs1" substyle="BgCardList"/>
			<quad id="Left" posn="-27 -77 0" sizen="6 6" bgcolor="FFFA" style="Copilot" substyle="Left"/>
			<quad id="Right" posn="-15 -77 0" sizen="6 6" bgcolor="FFFA" style="Copilot" substyle="Right"/>
			<quad id="Down" posn="-21 -77 0" sizen="6 6" bgcolor="FFFA" style="Copilot" substyle="Down"/>
			<quad id="Up" posn="-21 -71 0" sizen="6 6" bgcolor="FFFA" style="Copilot" substyle="Up"/>
			<label id="Shoot" posn="10 -72 0" sizen="20 5" text="$sShoot" halign="center"/>
			<label id="Jump" posn="10 -78 0" sizen="20 5" text="$sJump" halign="center"/>
		</frame>
		<frame id="RaceTerminated" posn="0 -16 0">
			<quad posn="-51 -73 0" sizen="102 20" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="PlayerSlot"/>
			<label id="Shots" posn="-47 -77 0" sizen="31 3" text="Shots fired : N/A" autonewline="1" textsize="1"/>
			<label id="MaxSpeed" posn="-47 -81 0" sizen="35 3" text="Max speed : N/A" autonewline="1" textsize="1"/>
			<label id="StaminaUsed" posn="-47 -85 0" sizen="45 3" text="Stamina used : N/A" autonewline="1" textsize="1"/>
			<label id="Place" style="TextValueSmallSm" posn="47 -86 0" sizen="33 5" text="This run : 00:00.00" textsize="2" halign="right" valign="center"/>
		</frame>
		<frame id="Corner" posn="80 0 0">
			<quad posn="97 -72 -2" sizen="67 16" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange2Bg"/>
			<label id="BestTheorical" posn="158 -79.5 0" sizen="32 5" text="All Theo. : 00:00.00" textsize="0.5" halign="right" valign="center"/>
			<label id="Theorical" posn="125 -80.5 0" sizen="32 5" text="Theo. : 00:00.00" textsize="1" halign="right" valign="center"/>
			<quad posn="77 -73 0" sizen="88 32" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange2Bg"/>
			<quad posn="119 -78 1" sizen="47 19" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="BotLeft"/>
			<label id="PlayerBestTime" posn="144 -86 2" sizen="24 6" text="Best : 00:00:00" halign="center" valign="center" textcolor="000000FF" textsize="2"/>
			<label id="PlayerRunsAndRespawns" posn="85 -86 0" sizen="31 3" text="Runs : 0 - RS : 0" textsize="1"/>
		</frame>
		<frame id="Running" posn="0 -2 0">
			<label id="AmmoInfo" posn="-50 -80 0" sizen="54 5" text="Unlimited Ammo !" textsize="2" valign="center2" halign="center"/>
			<label id="StaminaInfo" posn="50 -80 0" sizen="54 5" text="Unlimited Stamina !" textsize="2" valign="center2" halign="center"/>
			<frame id="NoRegenAmmo" posn="0 0 0">
				<quad posn="-81 -76 0" sizen="28 8" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange1Bg"/>
				<label posn="-79 -79 0" sizen="25 3" text="$f00No regeneration !" textsize="1"/>
			</frame>
			<frame id="NoRegenStamina" posn="0 0 0">
				<quad posn="57 -76 0" sizen="28 8" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange2Bg"/>
				<label posn="61 -79 0" sizen="25 3" text="$f00No regeneration !" textsize="1"/>
			</frame>
			<quad posn="-89 -76 0" sizen="78 18" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange2Bg"/>
			<quad posn="5 -76 -1" sizen="84 18" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange2Bg"/>
			<quad posn="86 -74 -3" sizen="11 12" bgcolor="FFFA" style="UiSMSpectatorScoreBig" substyle="UIRange2Bg" hidden="0"/>
			<label id="CPProgress" posn="95 -80 -2" sizen="13 5" text="?/?" textsize="1" valign="center" halign="right" hidden="0"/>
			<gauge id="PlayerAmmo" posn="-14 -85 0" sizen="69 10" valign="center" halign="right" ratio="1" grading="0.25" drawbg="0"/>
			<gauge id="PlayerStamina" posn="14 -85 -1" sizen="69 10" valign="center" halign="left" ratio="1" drawbg="0"/>
			<quad posn="0 -84.5 1" sizen="30 8" bgcolor="FFFA" halign="center" valign="center" style="EnergyBar" substyle="BgText"/>
			<label id="PlayerTimer" posn="0 -84 2" sizen="23 9" text="--:--,--" style="TextRaceChrono" halign="center" valign="center" textsize="4"/>
		</frame>
	</frame>
	""";
}

Text CreateUIEventManager(){
	return """
		<script><!--

		declare netwrite RespawnKeyToggle for UI = "F4";
		declare netwrite RespawnAtStart for UI = False;

		declare netwrite CustomKeyTime for UI = 0;
		declare CustomKey for UI = "Delete";

		declare netwrite Boolean ForceNext for UI;

		declare netwrite Boolean Input_Up for UI;
		declare netwrite Boolean Input_Down for UI;
		declare netwrite Boolean Input_Left for UI;
		declare netwrite Boolean Input_Right for UI;

		ForceNext = False;

		while (True) {
			yield;
			// Process events
			foreach (Event in PendingEvents) {
				switch (Event.Type) {
					case CMlEvent::Type::KeyPress: {
						if(Event.KeyName == RespawnKeyToggle){
							RespawnAtStart = !RespawnAtStart;
						}
						if(Event.KeyName == CustomKey){
							CustomKeyTime = ArenaNow;
						}
						if(Event.KeyName == "F3" && !IsSpectatorMode){
							ForceNext = True;
						}
					}
				}
			}

			if(IsKeyPressed(143) || IsKeyPressed(131) || IsKeyPressed(127)){
				Input_Up = True;
			} else {
				Input_Up = False;
			}

			if(IsKeyPressed(113) || IsKeyPressed(31)){
				Input_Down = True;
			} else {
				Input_Down = False;
			}

			if(IsKeyPressed(104) || IsKeyPressed(110) || IsKeyPressed(65)){
				Input_Left = True;
			} else {
				Input_Left = False;
			}

			if(IsKeyPressed(27) || IsKeyPressed(109)){
				Input_Right = True;
			} else {
				Input_Right = False;
			}
		}
		--></script>
	""";
}